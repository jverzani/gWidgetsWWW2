% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/gformlayout.R
\name{gformlayout}
\alias{gformlayout}
\title{A form layout container}
\usage{
gformlayout(align = c("default", "left", "center", "right", "top"),
  spacing = 5, container = NULL, ..., label.width = 100, width = NULL,
  height = NULL, ext.args = NULL)
}
\arguments{
\item{align}{alignment of labels, from \code{c("default", "left",
"center", "right", "top")}.}

\item{spacing}{spacing between columns}

\item{container}{parent container}

\item{...}{passed to \code{add} method of parent container.}

\item{label.width}{width reserved for labels}

\item{width}{width in pixels of component. Sizing in
\pkg{gWidgetsWWW2} is sometimes necessary as the arguments
\code{expand} and \code{fill} are not well implemented.}

\item{height}{height in pixels of the component.}

\item{ext.args}{The contructors of \pkg{gWidgetsWWW2} ultimately
call an Ext constructor. The options passed to the Ext constructor
may be added to or overridden by use of this argument. Values are
passed in as named list components and with values converted into JavaScript
objects by \code{asJSObject}.}
}
\description{
A simple way to layout forms with labels.  The label is passed to
the \code{label} argument of the control's constructor which is
then passed along to the \code{add} method of the parent
container.
}
\examples{
\dontrun{
w <- gwindow("gformlayout")
g <- gvbox(container=w)

flyt <- gformlayout(container=g)
gedit("", label="Name:", container=flyt)
gedit("", label="Rank:", container=flyt)
gedit("", label="Serial No.:", container=flyt)

b <- gbutton("Show me", container=g, handler=function(h,...) {
print(svalue(flyt))
})

}
}

