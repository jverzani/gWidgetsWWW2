% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/gcontainer.R
\docType{class}
\name{GContainer-class}
\alias{GContainer}
\alias{GContainer-class}
\title{Base reference class for container objects.}
\description{
Container objects are those that hold other components and may be
passed to constructors through their \code{container}
argument. All objects keep a reference to their parent container,
containers also keep references to their child components. See the
\code{children} array, which is used for this.
}
\details{
The main method for containers is the \code{add} method, though
this is rarely called, as the underlying method is used in a
widget's constructor when a parent container is specified through
the standard \code{container} argument.

When an object is added one may need to recompute the layout. The
\code{do_layout} method will inittiate this. To have this done
each time a child is added set the argument \code{auto_layout} to
\code{TRUE}.
}
\section{Methods}{

\describe{
\item{\code{add_dots(child, expand = FALSE, fill = FALSE, anchor = NULL, ...)}}{Function to do process expand, fill, anchor arguments when adding a child}

\item{\code{child_bookkeeping(child)}}{Update parent property of child and children property of parent container}

\item{\code{delete(child, ...)}}{Remove child from container}

\item{\code{do_layout()}}{Call layout method of container to recompute}

\item{\code{initialize(container = NULL, parent = NULL, ...)}}{Initialize widget. @param toplevel required or found}

\item{\code{set_child_fill(child, fill, horizontal = TRUE)}}{Fill can be NULL, TRUE, FALSE, '', 'both', 'x', 'y'...}

\item{\code{set_enabled(value)}}{Disable/enable component}

\item{\code{update(...)}}{Update method for containers refreshes the layout}
}}

