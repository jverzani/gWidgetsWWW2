% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/gcheckboxgroup.R
\name{gcheckbox}
\alias{gcheckbox}
\title{checkbox widget}
\usage{
gcheckbox(text = "", checked = FALSE, use.togglebutton = FALSE,
  handler = NULL, action = NULL, container = NULL, ..., width = NULL,
  height = NULL, ext.args = NULL)
}
\arguments{
\item{text}{character. text label for checkbox.}

\item{checked}{logical. initial state (Set later with \code{svalue<-})}

\item{use.togglebutton}{logical. XXX not implemented If TRUE, represent with a togglebutton, else use check box}

\item{handler}{optional means (to \code{\link{addHandlerChanged}})
to specify a handler for the default signal. A handler is a
function with signature \code{(h,...)} where \code{h} is a list
with components \code{obj} referring to the object emitting the
signal, \code{action} containing values passed to the
\code{action} argument, and possible other values.}

\item{action}{Passed to handler to parameterize a call}

\item{container}{A parent container. In \pkg{gWidgetsWWW2} a
parent container is not optional (though it can be substituted
with the \code{parent} argument in some circumstances). The parent
specifies the widget hierarchy and the \code{...} argument is used
to pass along arguments to layout the child component in the
parent container. Typically, these are passed to the \code{add}
method of the parent container.}

\item{...}{Used to pass along argument to the parent container's
\code{add} method and possible other arguments to the underlying
reference class constructors.}

\item{width}{width in pixels of component. Sizing in
\pkg{gWidgetsWWW2} is sometimes necessary as the arguments
\code{expand} and \code{fill} are not well implemented.}

\item{height}{height in pixels of the component.}

\item{ext.args}{The constructors of \pkg{gWidgetsWWW2} ultimately
call an Ext constructor. The options passed to the Ext constructor
may be added to or overridden by use of this argument. Values are
passed in as named list components and with values converted into JavaScript
objects by \code{asJSObject}.}
}
\description{
checkbox widget
}
\note{
No method to set label
}
\examples{
w <- gwindow()
sb <- gstatusbar("Powered by gWidgetsWWW and Rook", cont=w)
cb <- gcheckbox("Check me?", cont=w, handler=function(h,...) {
  if(svalue(h$obj)) galert("checked", parent=w)
})
}

